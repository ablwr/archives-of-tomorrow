{"version":3,"file":"component---src-pages-audio-audio-json-json-id-js-a3ab34d5a9d8b31222ff.js","mappings":"oLAIsC,IAEhCA,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAsGf,OAtGeC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAMhBC,OAAA,WACE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAM,KACLF,EAAAA,cAAA,aACGG,KAAKC,MAAMC,KAAKC,UAAUC,KAAK,6DAIpCP,EAAAA,cAAA,OAAKQ,UAAU,oBACbR,EAAAA,cAAA,OAAKQ,UAAU,wBACbR,EAAAA,cAAA,UAAKG,KAAKC,MAAMC,KAAKC,UAAUC,QAGnCP,EAAAA,cAAA,OAAKQ,UAAU,4EACZL,KAAKC,MAAMC,KAAKC,UAAUG,KACzBT,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,OAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUG,MAGpDN,KAAKC,MAAMC,KAAKC,UAAUI,KACzBV,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,OAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUI,MAGpDP,KAAKC,MAAMC,KAAKC,UAAUK,QACzBX,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,UAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUK,SAGpDR,KAAKC,MAAMC,KAAKC,UAAUM,SACzBZ,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,WAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUM,UAGpDT,KAAKC,MAAMC,KAAKC,UAAUO,aACzBb,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,gBAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QACZL,KAAKC,MAAMC,KAAKC,UAAUO,cAIhCV,KAAKC,MAAMC,KAAKC,UAAUQ,UACzBd,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,kBAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUQ,WAGpDX,KAAKC,MAAMC,KAAKC,UAAUS,MACzBf,EAAAA,cAAA,OAAKQ,UAAU,2CACbR,EAAAA,cAAA,QAAMQ,UAAU,2DAA0D,QAG1ER,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,UAAUS,QAIvDf,EAAAA,cAAA,OAAKQ,UAAU,mDACbR,EAAAA,cAAA,OAAKQ,UAAU,2DAA0D,aAGxEL,KAAKC,MAAMC,KAAKC,UAAUU,OACzBhB,EAAAA,cAAA,OAAKQ,UAAU,gDACZL,KAAKC,MAAMC,KAAKC,UAAUU,OAG9Bb,KAAKC,MAAMC,KAAKC,UAAUW,OACzBjB,EAAAA,cAAA,OAAKQ,UAAU,gDACZL,KAAKC,MAAMC,KAAKC,UAAUW,OAG9Bd,KAAKC,MAAMC,KAAKC,UAAUY,OACzBlB,EAAAA,cAAA,OAAKQ,UAAU,gDACZL,KAAKC,MAAMC,KAAKC,UAAUY,QAMvC,EAACzB,CAAA,CAtGe,CAASO,EAAAA,WAyG3B,W","sources":["webpack://archives-of-tomorrow/./src/pages/audio/{AudioJson.jsonId}.js"],"sourcesContent":["import * as PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport { Helmet } from \"react-helmet\";\n\nclass DataTemplate extends React.Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      audioJson: PropTypes.object.isRequired,\n    }),\n  };\n  render() {\n    return (\n      <Layout>\n        <Helmet>\n          <title>\n            {this.props.data.audioJson.name} | Archives of Tomorrow: Illustrated\n            Media Format Guides\n          </title>\n        </Helmet>\n        <div className=\"grid grid-cols-1\">\n          <div className=\"m-4 mb-0 text-center\">\n            <h1>{this.props.data.audioJson.name}</h1>\n          </div>\n        </div>\n        <div className=\"w-11/12 grid lg:grid-cols-3 gap-2 m-4 border-2 text-lg border-orange-800\">\n          {this.props.data.audioJson.aka && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                AKA\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.aka}</div>\n            </div>\n          )}\n          {this.props.data.audioJson.era && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                Era\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.era}</div>\n            </div>\n          )}\n          {this.props.data.audioJson.format && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                Format\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.format}</div>\n            </div>\n          )}\n          {this.props.data.audioJson.format2 && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                Format2\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.format2}</div>\n            </div>\n          )}\n          {this.props.data.audioJson.developedBy && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                Developed by\n              </span>\n              <div className=\"pl-6\">\n                {this.props.data.audioJson.developedBy}\n              </div>\n            </div>\n          )}\n          {this.props.data.audioJson.capacity && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                (Max) Capacity\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.capacity}</div>\n            </div>\n          )}\n          {this.props.data.audioJson.size && (\n            <div className=\"border-r-2 border-b-2 border-orange-800\">\n              <span className=\"relative top-0 left-2 text-xs uppercase text-orange-900\">\n                Size\n              </span>\n              <div className=\"pl-6\">{this.props.data.audioJson.size}</div>\n            </div>\n          )}\n        </div>\n        <div className=\"grid grid-cols-1 m-4 border-2 border-orange-800\">\n          <div className=\"uppercase relative top-0 left-2 text-lg text-orange-900\">\n            Fun facts\n          </div>\n          {this.props.data.audioJson.fact1 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2 border-orange-800\">\n              {this.props.data.audioJson.fact1}\n            </div>\n          )}\n          {this.props.data.audioJson.fact2 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2 border-orange-800\">\n              {this.props.data.audioJson.fact2}\n            </div>\n          )}\n          {this.props.data.audioJson.fact3 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2 border-orange-800\">\n              {this.props.data.audioJson.fact3}\n            </div>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default DataTemplate;\n\nexport const pageQuery = graphql`\n  query ($jsonId: String!) {\n    audioJson(jsonId: { eq: $jsonId }) {\n      jsonId\n      name\n      aka\n      era\n      format\n      format2\n      developedBy\n      capacity\n      size\n      fact1\n      fact2\n      fact3\n    }\n  }\n`;\n"],"names":["DataTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","React","Layout","Helmet","this","props","data","audioJson","name","className","aka","era","format","format2","developedBy","capacity","size","fact1","fact2","fact3"],"sourceRoot":""}