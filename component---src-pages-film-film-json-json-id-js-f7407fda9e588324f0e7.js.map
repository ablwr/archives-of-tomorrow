{"version":3,"file":"component---src-pages-film-film-json-json-id-js-f7407fda9e588324f0e7.js","mappings":"oLAIsC,IAEhCA,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAoGf,OApGeC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UAMhBC,OAAA,WACE,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAM,KACLF,EAAAA,cAAA,aACGG,KAAKC,MAAMC,KAAKC,SAASC,KAAK,6DAInCP,EAAAA,cAAA,OAAKQ,UAAU,oBACbR,EAAAA,cAAA,OAAKQ,UAAU,wBACbR,EAAAA,cAAA,UAAKG,KAAKC,MAAMC,KAAKC,SAASC,QAGlCP,EAAAA,cAAA,OAAKQ,UAAU,0DACZL,KAAKC,MAAMC,KAAKC,SAASG,KACxBT,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,OAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASG,MAGnDN,KAAKC,MAAMC,KAAKC,SAASI,KACxBV,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,OAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASI,MAGnDP,KAAKC,MAAMC,KAAKC,SAASK,QACxBX,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,UAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASK,SAGnDR,KAAKC,MAAMC,KAAKC,SAASM,SACxBZ,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,WAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASM,UAGnDT,KAAKC,MAAMC,KAAKC,SAASO,aACxBb,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,gBAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASO,cAGnDV,KAAKC,MAAMC,KAAKC,SAASQ,aACxBd,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,gBAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASQ,cAGnDX,KAAKC,MAAMC,KAAKC,SAASS,MACxBf,EAAAA,cAAA,OAAKQ,UAAU,yBACbR,EAAAA,cAAA,QAAMQ,UAAU,2CAA0C,QAG1DR,EAAAA,cAAA,OAAKQ,UAAU,QAAQL,KAAKC,MAAMC,KAAKC,SAASS,QAItDf,EAAAA,cAAA,OAAKQ,UAAU,iCACbR,EAAAA,cAAA,OAAKQ,UAAU,2CAA0C,aAGxDL,KAAKC,MAAMC,KAAKC,SAASU,OACxBhB,EAAAA,cAAA,OAAKQ,UAAU,8BACZL,KAAKC,MAAMC,KAAKC,SAASU,OAG7Bb,KAAKC,MAAMC,KAAKC,SAASW,OACxBjB,EAAAA,cAAA,OAAKQ,UAAU,8BACZL,KAAKC,MAAMC,KAAKC,SAASW,OAG7Bd,KAAKC,MAAMC,KAAKC,SAASY,OACxBlB,EAAAA,cAAA,OAAKQ,UAAU,8BACZL,KAAKC,MAAMC,KAAKC,SAASY,QAMtC,EAACzB,CAAA,CApGe,CAASO,EAAAA,WAuG3B,W","sources":["webpack://archives-of-tomorrow/./src/pages/film/{FilmJson.jsonId}.js"],"sourcesContent":["import * as PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport { Helmet } from \"react-helmet\";\n\nclass DataTemplate extends React.Component {\n  static propTypes = {\n    data: PropTypes.shape({\n      filmJson: PropTypes.object.isRequired,\n    }),\n  };\n  render() {\n    return (\n      <Layout>\n        <Helmet>\n          <title>\n            {this.props.data.filmJson.name} | Archives of Tomorrow: Illustrated\n            Media Format Guides\n          </title>\n        </Helmet>\n        <div className=\"grid grid-cols-1\">\n          <div className=\"m-4 mb-0 text-center\">\n            <h1>{this.props.data.filmJson.name}</h1>\n          </div>\n        </div>\n        <div className=\"w-11/12 grid lg:grid-cols-3 gap-2 m-4 border-2 text-lg\">\n          {this.props.data.filmJson.aka && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                AKA\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.aka}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.era && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Era\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.era}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.format && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Format\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.format}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.format2 && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Format2\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.format2}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.developedBy && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Developed by\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.developedBy}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.aspectRatio && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Aspect Ratio\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.aspectRatio}</div>\n            </div>\n          )}\n          {this.props.data.filmJson.size && (\n            <div className=\"border-r-2 border-b-2\">\n              <span className=\"relative top-0 left-2 text-xs uppercase\">\n                Size\n              </span>\n              <div className=\"pl-6\">{this.props.data.filmJson.size}</div>\n            </div>\n          )}\n        </div>\n        <div className=\"grid grid-cols-1 m-4 border-2\">\n          <div className=\"uppercase relative top-0 left-2 text-lg\">\n            Fun facts\n          </div>\n          {this.props.data.filmJson.fact1 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2\">\n              {this.props.data.filmJson.fact1}\n            </div>\n          )}\n          {this.props.data.filmJson.fact2 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2\">\n              {this.props.data.filmJson.fact2}\n            </div>\n          )}\n          {this.props.data.filmJson.fact3 && (\n            <div className=\"pl-6 pr-10 pt-2 border-b-2\">\n              {this.props.data.filmJson.fact3}\n            </div>\n          )}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default DataTemplate;\n\nexport const pageQuery = graphql`\n  query ($jsonId: String!) {\n    filmJson(jsonId: { eq: $jsonId }) {\n      jsonId\n      name\n      aka\n      era\n      format\n      format2\n      developedBy\n      aspectRatio\n      size\n      fact1\n      fact2\n      fact3\n    }\n  }\n`;\n"],"names":["DataTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","React","Layout","Helmet","this","props","data","filmJson","name","className","aka","era","format","format2","developedBy","aspectRatio","size","fact1","fact2","fact3"],"sourceRoot":""}