{"version":3,"file":"component---src-pages-illustrations-audio-js-f7ed7e8f20f90596f8ec.js","mappings":"gKA0BA,UAtB2BA,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAClCE,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAAIE,UAAU,4BAA2B,SAEzCF,EAAAA,cAAA,OAAKE,UAAU,8CACZH,EAAKI,QAAQC,MAAMC,KAAKC,GAErBN,EAAAA,cAAA,OAAKE,UAAU,GAAGK,IAAKD,EAAKE,KAAKC,MAC/BT,EAAAA,cAAA,OAEEU,IAAKJ,EAAKE,KAAKG,UACfC,IAAKN,EAAKE,KAAKC,YAOpB,C","sources":["webpack://archives-of-tomorrow/./src/pages/illustrations/audio.js"],"sourcesContent":["import * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { graphql } from \"gatsby\";\n\nconst AudioIllustrations = ({ data }) => (\n  <Layout>\n    <>\n      <h1 className=\" drop-shadow text-center\">Audio</h1>\n\n      <div className=\"max-w-full grid grid-cols-3 lg:grid-cols-5\">\n        {data.allFile.edges.map((edge) => {\n          return (\n            <div className=\"\" key={edge.node.base}>\n              <img\n                // loading=\"lazy\"\n                src={edge.node.publicURL}\n                alt={edge.node.base}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  </Layout>\n);\n\nexport default AudioIllustrations;\n\nexport const indexQuery = graphql`\n  query Illustrations {\n    allFile(filter: { sourceInstanceName: { eq: \"audioIllustrations\" } }) {\n      edges {\n        node {\n          base\n          publicURL\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","data","React","Layout","className","allFile","edges","map","edge","key","node","base","src","publicURL","alt"],"sourceRoot":""}